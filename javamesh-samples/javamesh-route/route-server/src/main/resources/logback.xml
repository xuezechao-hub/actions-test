<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <property value="logs" name="LOG_HOME"/>
    <property value="UTF-8" name="CHARSET"/>
    <property value="${LOG_HOME}/operate" name="OPERATE_LOG_PATH"/>
    <property value="${LOG_HOME}/debug" name="DEBUG_LOG_PATH"/>
    <property value="${LOG_HOME}/runtime" name="RUNTIME_LOG_PATH"/>
    <property value="[%d{yyyy-MM-dd HH:mm:ss.SSSZ}][%-5level][%thread][${APP_NAME:-console}][${INSTANCE_NAME:-instanceName}][%C] - [%replace(%msg){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***}] %replace(%ex){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***} %n" name="LOG_PATTERN"/>
    <property value="[%d{yyyy-MM-dd HH:mm:ss.SSSZ}][%-5level][%thread][${APP_NAME:-console}][${INSTANCE_NAME:-instanceName}][%C:%line] - [%replace(%msg){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***}] %replace(%ex){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***} %n"
              name="LOG_DEBUG_PATTERN"/>
    <property value="[%d{yyyy-MM-dd HH:mm:ss.SSSZ}][%-5level][%thread][${APP_NAME:-console}][${INSTANCE_NAME:-instanceName}] - [%replace(%msg){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***}] %replace(%ex){'0x[a-f0-9]{15,}|0x0|[sS]ession[iI][dD]\\s?=\\s?[0-9]{4,}', 0x***} %n"
              name="LOG_OPERATE_PATTERN"/>
    <contextName>logback-test</contextName>

    <!--控制台日志-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    　　　　　　
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${RUNTIME_LOG_PATH}/${APP_NAME:-console}-info.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>

        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${RUNTIME_LOG_PATH}/${APP_NAME:-console}-%d{yyyy-MM-dd}-info.%i.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
            <maxFileSize>20MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </triggeringPolicy>

        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!--DEBUG日志-->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${DEBUG_LOG_PATH}/${APP_NAME:-console}-debug.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${DEBUG_LOG_PATH}/${APP_NAME:-console}-%d{yyyy-MM-dd}-debug.%i.log.gz</fileNamePattern>
            <maxHistory>3</maxHistory>
            <maxFileSize>20MB</maxFileSize>
            <totalSizeCap>20GB</totalSizeCap>
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </triggeringPolicy>

        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${LOG_DEBUG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 异步日志 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!--The maximum capacity of the blocking queue. By default, queueSize is set to 256.-->
        <queueSize>256</queueSize>
        <!--By default, when the blocking queue has 20% capacity remaining, it will drop events of level TRACE, DEBUGand INFO, keeping only events of level WARN and ERROR. To keep all events, set discardingThreshold to 0.-->
        <discardingThreshold>0</discardingThreshold>
        <maxFlushTime>10</maxFlushTime>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 异步DEBUG日志 -->
    <appender name="DEBUG_ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!--The maximum capacity of the blocking queue. By default, queueSize is set to 256.-->
        <queueSize>256</queueSize>
        <!--By default, when the blocking queue has 20% capacity remaining, it will drop events of level TRACE, DEBUGand INFO, keeping only events of level WARN and ERROR. To keep all events, set discardingThreshold to 0.-->
        <discardingThreshold>0</discardingThreshold>
        <maxFlushTime>10</maxFlushTime>
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="DEBUG_FILE"/>
    </appender>

    <!--操作日志-->
    <appender name="OPERATE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件保存路径 -->
        <file>${OPERATE_LOG_PATH}/${APP_NAME:-console}-operate.log</file>
        <!-- 拆分策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按照时间和压缩格式声明拆分的文件名 -->
            <fileNamePattern>${OPERATE_LOG_PATH}/${APP_NAME:-console}-%d{yyyy-MM-dd}-operate.%i.log.gz</fileNamePattern>
            <!-- 按照文件大小来拆分 -->
            <maxFileSize>20MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
            <!--每个文件最多100MB，保留15天的历史记录，但最多20GB-->
            <totalSizeCap>20GB</totalSizeCap>
            <!--重启清理日志文件-->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <!-- 日志级别过滤器 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 日志过滤规则：超过ERROR的记录，没超过的拦截 -->
            <!-- OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <charset>${CHARSET}</charset>
            <pattern>${LOG_OPERATE_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 异步日志 :只能引用appender，包裹住它，然后rootlogger再去引用异步appender-->
    <appender name="ASYNC_OPERATE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 引用appender -->
        <appender-ref ref="OPERATE"/>
        <!--开启这个异步日志会携带更多的信息，例如堆栈，但是会损耗一定的性能-->
        <includeCallerData>true</includeCallerData>
    </appender>
    <logger name="OPERATE_LOGGER" additivity="true" level="info">
        <appender-ref ref="ASYNC_OPERATE"/>
    </logger>
    <logger name="org.apache.zookeeper.ClientCnxn" additivity="false" level="warn"/>
    <root level="${paas.log.level:-INFO}">
        <appender-ref ref="ASYNC"/>
        <appender-ref ref="DEBUG_ASYNC"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>